---
interface CardProps {
  title: string;
  price: number;
  features: string[];
  isPopular: boolean;
}

const { title, price, description, features, isPopular } = Astro.props as CardProps;
---

<div class={`flex flex-col overflow-hidden border-2 rounded-md ${isPopular ? 'dark:border-blue' : 'dark:border-black'}`}>
  <div class="flex flex-col items-center justify-center px-2 py-8 space-y-4 dark:bg-black">
    <p class="text-lg font-medium text-white">{title}</p>
    <p class="text-5xl font-bold text-white">${price}
      <span class="text-xl dark:text-white">/mo</span>
    </p>
  </div>
  <div class="flex flex-col items-center justify-center px-2 py-8 dark:bg-isai">
    <ul class="self-stretch flex-1 space-y-2">
      {features.map((feature) => (
        <li class="flex justify-center space-x-2">
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="w-6 h-6 dark:text-blue">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z"></path>
          </svg>
          <span class="text-white">{feature}</span>
        </li>
      ))}
    </ul>
    <button class="px-8 py-3 mt-6 text-lg font-semibold rounded sm:mt-12 dark:bg-blue dark:text-gray-50 hover:bg-hovb">Empezar</button>
  </div>
</div>
